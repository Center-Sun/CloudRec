<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alipay.dao.mapper.SubscriptionMapper">
    <resultMap id="BaseResultMap" type="com.alipay.dao.po.SubscriptionPO">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="condition" jdbcType="VARCHAR" property="condition"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.alipay.dao.po.SubscriptionPO">
        <result column="rule_config" jdbcType="LONGVARCHAR" property="ruleConfig"/>
        <result column="rule_config_json" jdbcType="LONGVARCHAR" property="ruleConfigJson"/>
        <result column="action_list" jdbcType="LONGVARCHAR" property="actionList"/>
    </resultMap>
    <sql id="Base_Column_List">
        id
        , gmt_create, gmt_modified, name, `condition`, user_id,status
    </sql>
    <sql id="Blob_Column_List">
        rule_config
        , rule_config_json,action_list
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from subscription
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from subscription
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insertSelective" parameterType="com.alipay.dao.po.SubscriptionPO" useGeneratedKeys="true"
            keyProperty="id">
        insert into subscription
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="condition != null">
                `condition`,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="ruleConfig != null">
                rule_config,
            </if>
            <if test="ruleConfigJson != null">
                rule_config_json,
            </if>
            <if test="actionList != null">
                action_list,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="condition != null">
                #{condition,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="ruleConfig != null">
                #{ruleConfig,jdbcType=LONGVARCHAR},
            </if>
            <if test="ruleConfigJson != null">
                #{ruleConfigJson,jdbcType=LONGVARCHAR},
            </if>
            <if test="actionList != null">
                #{actionList,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.alipay.dao.po.SubscriptionPO">
        update subscription
        <set>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="condition != null">
                `condition` = #{condition,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="ruleConfig != null">
                rule_config = #{ruleConfig,jdbcType=LONGVARCHAR},
            </if>
            <if test="ruleConfigJson != null">
                rule_config_json = #{ruleConfigJson,jdbcType=LONGVARCHAR},
            </if>
            <if test="actionList != null">
                action_list = #{actionList,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="count" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM subscription
        <include refid="getListWhere"/>
    </select>
    <select id="list" resultMap="ResultMapWithBLOBs">
        SELECT
        <include refid="Base_Column_List"></include>
        ,
        <include refid="Blob_Column_List"></include>
        FROM subscription
        <include refid="getListWhere"/>
        ORDER BY id DESC
        <include refid="getListLimit"></include>
    </select>

    <sql id="getListWhere">
        <where>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR}
            </if>
        </where>
    </sql>

    <sql id="getListLimit">
        <if test="offset != null and size != null">
            LIMIT
            #{offset},
            #{size}
        </if>
    </sql>

</mapper>